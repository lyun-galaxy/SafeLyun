<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE configuration
PUBLIC "-//mybatis.org//DTD Config 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-config.dtd">
<configuration>

	<!-- 加载属性文件,已在applicationContext-dao.xml配置 -->
	<!-- <properties resource="mybatis/db.properties"/> -->

	<!-- 全局配置参数，需要时再设置 -->
	<settings>
	    <!-- 打开延迟加载的开关 -->
		<setting name="lazyLoadingEnabled" value="true"/>
		<!-- 将积极加载改为消极加载即按需要加载 -->
		<setting name="aggressiveLazyLoading" value="false"/>
		<!-- 关闭二级缓存 -->
		<setting name="cacheEnabled" value="false"/>
	 </settings>

	<!-- 别名定义 -->
	<typeAliases>

		<!-- 针对单个别名定义 type：类型的路径 alias：别名 -->
		<!-- <typeAlias type="com.paly.domain.User" alias="user"/> -->
		<!-- 批量别名定义 指定包名，mybatis自动扫描包中的领域类，自动定义别名，别名就是类名（首字母大写或小写都可以） -->
		<package name="com.paly.domain" />

	</typeAliases>

	<plugins>
    	<!-- com.github.pagehelper为PageHelper类所在包名 -->
	    <plugin interceptor="com.github.pagehelper.PageHelper">
	        <!-- 4.0.0以后版本可以不设置该参数 -->
	        <property name="dialect" value="mysql"/>
	        <!-- 该参数默认为false -->
	        <!-- 设置为true时，会将RowBounds第一个参数offset当成pageNum页码使用 -->
	        <!-- 和startPage中的pageNum效果一样-->
	        <property name="offsetAsPageNum" value="true"/>
	        <!-- 该参数默认为false -->
	        <!-- 设置为true时，使用RowBounds分页会进行count查询 -->
	        <property name="rowBoundsWithCount" value="true"/>
	        <!-- 设置为true时，如果pageSize=0或者RowBounds.limit = 0就会查询出全部的结果 -->
	        <!-- （相当于没有执行分页查询，但是返回结果仍然是Page类型）-->
	        <property name="pageSizeZero" value="true"/>
	        <!-- 3.3.0版本可用 - 分页参数合理化，默认false禁用 -->
	        <!-- 启用合理化时，如果pageNum<1会查询第一页，如果pageNum>pages会查询最后一页 -->
	        <!-- 禁用合理化时，如果pageNum<1或pageNum>pages会返回空数据 -->
	        <property name="reasonable" value="false"/>
	        <!-- 3.5.0版本可用 - 为了支持startPage(Object params)方法 -->
	        <!-- 增加了一个`params`参数来配置参数映射，用于从Map或ServletRequest中取值 -->
	        <!-- 可以配置pageNum,pageSize,count,pageSizeZero,reasonable,orderBy,不配置映射的用默认值 -->
	        <!-- 不理解该含义的前提下，不要随便复制该配置 -->
	        <property name="params" value="pageNum=pageHelperStart;pageSize=pageHelperRows;"/>
	        <!-- 支持通过Mapper接口参数来传递分页参数 -->
	        <property name="supportMethodsArguments" value="false"/>
	        <!-- always总是返回PageInfo类型,check检查返回类型是否为PageInfo,none返回Page -->
	        <property name="returnPageInfo" value="none"/>
	    </plugin>
	</plugins>

	<!-- 和spring整合后 environments配置将废除 -->
	<!-- <environments default="development">
		<environment id="development">
			使用jdbc事务管理，事务控制由mybatis
			<transactionManager type="JDBC" />
			数据库连接池，由mybatis管理
			<dataSource type="POOLED">
				<property name="driver" value="${driver}" />
				<property name="url" value="${url}" />
				<property name="username" value="${name}" />
				<property name="password" value="${password}" />
			</dataSource>
		</environment>
	</environments> -->
	
	<!-- 加载 映射文件 -->
<!-- 	<mappers>
		<mapper resource="sqlmap/User.xml" />

		通过resource方法一次加载一个映射文件
		<mapper resource="mapper/UserMapper.xml"/>
		
		
		批量加载mapper 指定mapper接口的包名，mybatis自动扫描包下边所有mapper接口进行加载 
		遵循一些规范：需要将mapper接口类名和mapper.xml映射文件名称保持一致，且在一个目录中
		 上边规范的前提是：使用的是mapper代理方法
			
			和spring整合后，使用mapper扫描器，这里不需要配置了
		<package name="com.paly.mapper" />
	</mappers> -->

</configuration>