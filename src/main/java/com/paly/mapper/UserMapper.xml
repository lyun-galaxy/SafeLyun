<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.paly.mapper.UserMapper" >
  <resultMap id="BaseResultMap" type="com.paly.domain.User" >
    <id column="userId" property="userId" jdbcType="INTEGER" />
    <result column="userName" property="userName" jdbcType="VARCHAR" />
    <result column="userPassword" property="userPassword" jdbcType="VARCHAR" />
     <!-- property: 指的是集合属性的值, ofType：指的是集合中元素的类型 -->
  	<collection property="roles" ofType="com.paly.domain.Role" select="com.paly.mapper.RoleMapper.getByUserId" column="userId">  		
  	</collection>
  </resultMap> 
  
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from user
    where userId = #{userId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.paly.domain.User" >
    insert into user (userId, userName, userPassword
      )
    values (#{userId,jdbcType=INTEGER}, #{userName,jdbcType=VARCHAR}, #{userPassword,jdbcType=VARCHAR}
      )
  </insert>

  <update id="updateByPrimaryKey" parameterType="com.paly.domain.User" >
    update user
    set userName = #{userName,jdbcType=VARCHAR},
      userPassword = #{userPassword,jdbcType=VARCHAR}
    where userId = #{userId,jdbcType=INTEGER}
  </update>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select userId, userName, userPassword
    from user
    where userId = #{userId,jdbcType=INTEGER}
  </select>
  <select id="selectAll" resultMap="BaseResultMap" >
    select userId, userName, userPassword
    from user
  </select>

  <!-- 设置用户拥有的角色 -->
  <insert id="setUserHasRole">
  	insert into user_role (user_userId, role_roleId) 
  		values (#{userId,jdbcType=INTEGER}, #{roleId,jdbcType=INTEGER})
  </insert>
  
  <!-- 获取角色下的所有用户列表 -->
  <select id="getByRoleId" resultMap="BaseResultMap" parameterType="int">
  	select u.* from user u, user_role ur
  		where u.userId=ur.role_roleId and ur.role_roleId=#{roleId}
  </select>
  
  <!-- 根据学生id获取与其关联的用户  -->
  <select id="getByStudentId" resultMap="BaseResultMap" parameterType="int">
  	select u.* from user u, student s
  		where u.userId=s.studentId and s.studentId=#{studentId}
  </select>
</mapper>